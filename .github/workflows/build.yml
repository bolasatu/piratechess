name: Build Projects for Windows (WinForms) and Android (MAUI)

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      job:
        description: 'Which job to run'
        required: true
        default:  'all'  # Default to running all jobs

jobs:
  build-winforms:
    runs-on: windows-latest

    if: ${{ github.event_name == 'release' || (github.event.inputs.job == 'winforms' || github.event.inputs.job == 'all') }}

    steps:
    - name: Repository auschecken
      uses: actions/checkout@v4

    - name: .NET SDK einrichten für Winform
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0'  # Setze hier die gewünschte .NET Version (9.0)

    - name: Restore dependencies for WinForms
      run: dotnet restore ./piratechess_winform/piratechess_winform.csproj

    - name: Build WinForms project
      run: dotnet build ./piratechess_winform/piratechess_winform.csproj --configuration Release

    - name: Publish WinForms project 64-bit (Single File)
      run: dotnet publish piratechess_winform/piratechess_winform.csproj --configuration Release --output ./publish/win-x64 --self-contained false -r win-x64 /p:PublishSingleFile=true /p:DebugType=none 

    - name: Publish WinForms projects 32-bit (Single File)
      run: dotnet publish piratechess_winform/piratechess_winform.csproj --configuration Release --output ./publish/win-x86 --self-contained false -r win-x86 /p:PublishSingleFile=true /p:DebugType=none 
      
    - name: Umbenennen der 32-bit Version
      run: Rename-Item -Path ./publish/win-x86/piratechess_winform.exe -NewName piratechess_winform-win-x86.exe

    - name: Release-Asset erstellen
      uses: softprops/action-gh-release@v1
      with:
        files: ./publish/**/*.exe
      if: ${{ github.event_name == 'release' || github.event_name == 'push' }}  # Only run on release or tag push

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
 
  build-maui-win:
    runs-on: windows-latest  # MAUI build now runs on Windows

    if: ${{ github.event_name == 'release' || (github.event.inputs.job == 'maui' || github.event.inputs.job == 'all') }}
    
    steps:
    - name: Repository auschecken
      uses: actions/checkout@v4

    - name: .NET SDK einrichten für MAUI
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0'  # Setze hier die gewünschte .NET Version (9.0)

    - name: Install MAUI workloads
      run: dotnet workload install maui

    - name: Build MAUI project for Windows
      run: dotnet build ./piratechess_maui/piratechess_maui.csproj

    - name: Publish MAUI project for Windows (Single File)
      run: dotnet publish ./piratechess_maui/piratechess_maui.csproj -f net9.0-windows10.0.19041.0 --output ./publish/maui/win-x64 --self-contained false -r win-x64 /p:PublishSingleFile=true /p:DebugType=none /p:PublishTrimmed=true

    - name: Umbenennen der MAUI Windows Version
      run: Rename-Item -Path ./publish/maui/win-x64/piratechess_maui.exe -NewName piratechess_maui-win-x64.exe

    - name: Release-Asset erstellen für MAUI
      uses: softprops/action-gh-release@v1
      with:
        files: 
          ./publish/maui/win-x64/piratechess_maui-win-x64.exe 
      if: ${{ github.event_name == 'release' || github.event_name == 'push' }}  # Only run on release or tag push
 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        name: Test Maui Android

  build-maui-android:
    runs-on: windows-latest  # MAUI build now runs on Windows

    if: ${{ github.event_name == 'release' || (github.event.inputs.job == 'maui' || github.event.inputs.job == 'all') }}
    
    steps:
    - name: Repository auschecken
      uses: actions/checkout@v4

    - name: .NET SDK einrichten für MAUI
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0'  # Setze hier die gewünschte .NET Version (9.0)

    - name: Install MAUI workloads
      run: dotnet workload install maui

    - name: Build MAUI project for Windows
      run: dotnet build ./piratechess_maui/piratechess_maui.csproj

    - name: Publish MAUI project for Windows (Single File)
      run: dotnet publish ./piratechess_maui/piratechess_maui.csproj -f net9.0-android35.0 --output ./publish/maui/android --self-contained false -p:PackageFormat=Apk

    - name: Release-Asset erstellen für MAUI
      uses: softprops/action-gh-release@v1
      with:
        files: 
          ./publish/maui/android/*.apk
      if: ${{ github.event_name == 'release' || github.event_name == 'push' }}  # Only run on release or tag push
 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-maui-macos:
    runs-on: macos-latest  # macOS-Build für MAUI

    if: ${{ github.event_name == 'release' || (github.event.inputs.job == 'maui' || github.event.inputs.job == 'all') }}

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4

      - name: .NET SDK einrichten für MAUI (macOS)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: MAUI workloads installieren
        run: dotnet workload install maui

      - name: Build MAUI Projekt für macOS Catalyst
        run: dotnet build ./piratechess_maui/piratechess_maui.csproj -f net9.0-maccatalyst

      - name: Publish MAUI Projekt für macOS (Trimmed, Nicht-Self-Contained)
        run: dotnet publish ./piratechess_maui/piratechess_maui.csproj -f net9.0-maccatalyst --output ./publish/maui/macos --self-contained false -r maccatalyst-x64 /p:PublishTrimmed=true /p:PublishSingleFile=false /p:PublishReadyToRun=false /p:DebugType=none

      - name: Release-Asset erstellen für macOS
        uses: softprops/action-gh-release@v1
        with:
          files: ./publish/maui/macos/**
        if: ${{ github.event_name == 'release' || github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-maui-ios:
    runs-on: macos-latest  # MAUI iOS benötigt macOS + Xcode
  
    if: ${{ github.event_name == 'release' || (github.event.inputs.job == 'maui' || github.event.inputs.job == 'all') }}
  
    steps:
      - name: Repository auschecken
        uses: actions/checkout@v4
  
      - name: .NET SDK einrichten
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'
  
      - name: MAUI workloads installieren
        run: dotnet workload install maui
  
      - name: iOS-Projekt kompilieren für Simulator
        run: dotnet build ./piratechess_maui/piratechess_maui.csproj -f net9.0-ios -c Release -r ios-arm64
  
    # Optional: Publish als IPA für Geräte (erfordert Zertifikate/Provisioning)
    # - name: iOS-Projekt publishen (nur mit Codesigning)
    #   run: |
    #     dotnet publish ./piratechess_maui/piratechess_maui.csproj \
    #       -f net9.0-ios -c Release \
    #       -r ios-arm64 \
    #       /p:RuntimeIdentifier=ios-arm
  
  
  # Optional: Clean up after the build
  clean-up:
    runs-on: windows-latest
    needs: [build-winforms, build-maui-win, build-maui-android]  # Ensure cleanup runs after both build jobs
  
    steps:
    - name: Clean up build artifacts
      shell: pwsh
      run: |
        if (Test-Path ./publish) {
          Remove-Item -Recurse -Force ./publish
          Write-Host "Publish folder cleaned up."
        } else {
          Write-Host "No publish folder to clean up."
        }
